# Generated by Django 5.2.5 on 2025-10-08 00:41

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ssm', '0003_ssmauthuser_needs_password_reset'),
    ]

    operations = [
        migrations.AddField(
            model_name='shop',
            name='owner',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner_shops', to='ssm.user'),
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_product_categories', to='ssm.user')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='ssm.productcategory')),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
                'db_table': 'product_categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_code', models.CharField(max_length=50, unique=True)),
                ('product_name', models.CharField(max_length=200)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('discontinued', 'Discontinued')], default='active', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('specifications', models.JSONField(default=dict, help_text='Product technical specifications')),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, help_text='Purchase/cost price', max_digits=12)),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('retail_price', models.DecimalField(blank=True, decimal_places=2, help_text='Recommended retail price', max_digits=12, null=True)),
                ('total_stock', models.IntegerField(default=0, help_text='Total stock across all shops')),
                ('reorder_level', models.IntegerField(default=0, help_text='Minimum stock level before alert')),
                ('reorder_quantity', models.IntegerField(default=0, help_text='Quantity to reorder')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('thumbnail_url', models.URLField(blank=True, null=True)),
                ('images', models.JSONField(default=list, help_text='Array of image URLs')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=8, null=True)),
                ('dimensions', models.JSONField(blank=True, default=dict, help_text='Length, width, height in cm', null=True)),
                ('warranty_period', models.IntegerField(blank=True, help_text='Warranty period in months', null=True)),
                ('warranty_details', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('notes', models.TextField(blank=True, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_products', to='ssm.user')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_products', to='ssm.user')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='ssm.productcategory')),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('barcode', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('reserved', 'Reserved'), ('sold', 'Sold'), ('damaged', 'Damaged'), ('returned', 'Returned')], default='available', max_length=20)),
                ('sold_date', models.DateTimeField(blank=True, null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('allocated_date', models.DateTimeField(auto_now_add=True)),
                ('allocated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocated_instances', to='ssm.user')),
                ('current_shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_instances', to='ssm.shop')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='ssm.product')),
                ('sold_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sold_instances', to='ssm.user')),
            ],
            options={
                'db_table': 'product_instances',
            },
        ),
        migrations.CreateModel(
            name='ProductSale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sale_number', models.CharField(max_length=50, unique=True)),
                ('sale_date', models.DateTimeField(auto_now_add=True)),
                ('items', models.JSONField(default=list, help_text='Array of sold items with product, quantity, price')),
                ('customer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('mobile_money', 'Mobile Money'), ('bank_transfer', 'Bank Transfer'), ('credit', 'Credit')], default='cash', max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=12)),
                ('change_given', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='completed', max_length=20)),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True)),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
                ('refund_reason', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('refunded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refunded_product_sales', to='ssm.user')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_sales', to='ssm.shop')),
                ('sold_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_sales', to='ssm.user')),
            ],
            options={
                'db_table': 'product_sales',
            },
        ),
        migrations.CreateModel(
            name='ShopProductInventory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(default=0)),
                ('reserved_quantity', models.IntegerField(default=0)),
                ('available_quantity', models.IntegerField(default=0)),
                ('shop_cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('shop_selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('low_stock_alert', models.BooleanField(default=False)),
                ('min_stock_level', models.IntegerField(default=0)),
                ('shelf_location', models.CharField(blank=True, max_length=50, null=True)),
                ('bin_location', models.CharField(blank=True, max_length=50, null=True)),
                ('last_stock_count_date', models.DateTimeField(blank=True, null=True)),
                ('last_stock_count_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='counted_inventory', to='ssm.user')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_inventory', to='ssm.product')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_inventory', to='ssm.shop')),
            ],
            options={
                'db_table': 'shop_product_inventory',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier_code', models.CharField(max_length=50, unique=True)),
                ('supplier_name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('contact_person', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('alternative_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('business_registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('tax_pin', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_terms', models.CharField(blank=True, help_text='e.g., Net 30, Net 60', max_length=100, null=True)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Rating out of 5', max_digits=3, null=True)),
                ('total_purchases', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_suppliers', to='ssm.user')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_suppliers', to='ssm.user')),
            ],
            options={
                'db_table': 'suppliers',
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('movement_type', models.CharField(choices=[('stock_in', 'Stock In'), ('stock_out', 'Stock Out'), ('sale', 'Sale'), ('return', 'Return'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out'), ('adjustment', 'Adjustment'), ('damage', 'Damage'), ('expired', 'Expired')], max_length=20)),
                ('movement_date', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.IntegerField()),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('stock_before', models.IntegerField()),
                ('stock_after', models.IntegerField()),
                ('purchase_order_number', models.CharField(blank=True, max_length=50, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True)),
                ('delivery_note', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_stock_movements', to='ssm.user')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_stock_movements', to='ssm.user')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='ssm.product')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='ssm.shop')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='ssm.supplier')),
            ],
            options={
                'db_table': 'stock_movements',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('po_number', models.CharField(max_length=50, unique=True)),
                ('po_date', models.DateField()),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('approved', 'Approved'), ('ordered', 'Ordered'), ('partial', 'Partially Received'), ('received', 'Received'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('items', models.JSONField(default=list, help_text='Array of order items')),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('delivery_notes', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_purchase_orders', to='ssm.user')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_purchase_orders', to='ssm.user')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='ssm.shop')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_orders', to='ssm.supplier')),
            ],
            options={
                'db_table': 'purchase_orders',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='default_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplied_products', to='ssm.supplier'),
        ),
        migrations.AddIndex(
            model_name='productcategory',
            index=models.Index(fields=['code'], name='product_cat_code_fe6111_idx'),
        ),
        migrations.AddIndex(
            model_name='productcategory',
            index=models.Index(fields=['parent_category'], name='product_cat_parent__89c1c0_idx'),
        ),
        migrations.AddIndex(
            model_name='productinstance',
            index=models.Index(fields=['serial_number'], name='product_ins_serial__bdf510_idx'),
        ),
        migrations.AddIndex(
            model_name='productinstance',
            index=models.Index(fields=['barcode'], name='product_ins_barcode_5074b3_idx'),
        ),
        migrations.AddIndex(
            model_name='productinstance',
            index=models.Index(fields=['product', 'status'], name='product_ins_product_72c412_idx'),
        ),
        migrations.AddIndex(
            model_name='productinstance',
            index=models.Index(fields=['current_shop', 'status'], name='product_ins_current_ecd091_idx'),
        ),
        migrations.AddIndex(
            model_name='productsale',
            index=models.Index(fields=['sale_number'], name='product_sal_sale_nu_5f95b9_idx'),
        ),
        migrations.AddIndex(
            model_name='productsale',
            index=models.Index(fields=['shop', 'sale_date'], name='product_sal_shop_id_2bfa78_idx'),
        ),
        migrations.AddIndex(
            model_name='productsale',
            index=models.Index(fields=['status'], name='product_sal_status_6a6c6a_idx'),
        ),
        migrations.AddIndex(
            model_name='productsale',
            index=models.Index(fields=['customer_phone'], name='product_sal_custome_9ebb9b_idx'),
        ),
        migrations.AddIndex(
            model_name='shopproductinventory',
            index=models.Index(fields=['shop', 'product'], name='shop_produc_shop_id_c3544c_idx'),
        ),
        migrations.AddIndex(
            model_name='shopproductinventory',
            index=models.Index(fields=['low_stock_alert'], name='shop_produc_low_sto_8c695b_idx'),
        ),
        migrations.AddIndex(
            model_name='shopproductinventory',
            index=models.Index(fields=['available_quantity'], name='shop_produc_availab_563701_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='shopproductinventory',
            unique_together={('shop', 'product')},
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['supplier_code'], name='suppliers_supplie_e2938c_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['status'], name='suppliers_status_e3c425_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['supplier_name'], name='suppliers_supplie_2362cc_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['reference_number'], name='stock_movem_referen_e83e6e_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['shop', 'movement_date'], name='stock_movem_shop_id_faeebb_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['product', 'movement_date'], name='stock_movem_product_363a5e_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['movement_type'], name='stock_movem_movemen_d922c9_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['po_number'], name='purchase_or_po_numb_656941_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['supplier', 'po_date'], name='purchase_or_supplie_823b06_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['shop', 'status'], name='purchase_or_shop_id_5fdbe0_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['status'], name='purchase_or_status_5ac239_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_code'], name='products_product_15b636_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='products_categor_4083ff_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['status'], name='products_status_a30e64_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_name'], name='products_product_97a29d_idx'),
        ),
    ]
