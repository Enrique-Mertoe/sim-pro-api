# Generated by Django 5.2.5 on 2025-09-26 20:21

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ssm', '0004_alter_passwordresetrequest_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shop_code', models.CharField(help_text='Unique shop identifier', max_length=50, unique=True)),
                ('shop_name', models.CharField(max_length=200)),
                ('shop_type', models.CharField(choices=[('franchise', 'Franchise'), ('company_owned', 'Company Owned'), ('dealer', 'Dealer'), ('agent', 'Agent'), ('kiosk', 'Kiosk'), ('mall_counter', 'Mall Counter'), ('supermarket', 'Supermarket')], default='agent', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('pending_approval', 'Pending Approval'), ('closed', 'Closed')], default='pending_approval', max_length=20)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('county', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('alternative_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('business_registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('tax_pin', models.CharField(blank=True, max_length=50, null=True)),
                ('business_license_url', models.URLField(blank=True, null=True)),
                ('opening_hours', models.JSONField(default=dict, help_text='Store opening hours by day')),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0, help_text='Commission percentage', max_digits=5)),
                ('metadata', models.JSONField(default=dict, help_text='Additional shop-specific data')),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_shops', to='ssm.user')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_shops', to='ssm.user')),
                ('shop_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_shops', to='ssm.user')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssm.team')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_shops', to='ssm.user')),
            ],
            options={
                'db_table': 'shops',
            },
        ),
        migrations.CreateModel(
            name='ShopAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('action_type', models.CharField(choices=[('shop_created', 'Shop Created'), ('shop_updated', 'Shop Updated'), ('inventory_allocated', 'Inventory Allocated'), ('sale_completed', 'Sale Completed'), ('transfer_requested', 'Transfer Requested'), ('transfer_approved', 'Transfer Approved'), ('stock_received', 'Stock Received'), ('target_set', 'Target Set'), ('performance_calculated', 'Performance Calculated'), ('status_changed', 'Status Changed')], max_length=30)),
                ('before_state', models.JSONField(blank=True, null=True)),
                ('after_state', models.JSONField(blank=True, null=True)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('related_object_id', models.UUIDField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='ssm.shop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_audit_logs', to='ssm.user')),
            ],
            options={
                'db_table': 'shop_audit_logs',
            },
        ),
        migrations.CreateModel(
            name='ShopInventory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('reserved', 'Reserved'), ('sold', 'Sold'), ('returned', 'Returned'), ('damaged', 'Damaged'), ('expired', 'Expired')], default='available', max_length=20)),
                ('allocated_date', models.DateTimeField(auto_now_add=True)),
                ('sold_date', models.DateTimeField(blank=True, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('customer_id_number', models.CharField(blank=True, max_length=50, null=True)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('commission_earned', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('return_reason', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('allocated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocated_inventory', to='ssm.user')),
                ('returned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='returned_inventory', to='ssm.user')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='ssm.shop')),
                ('sim_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_inventory', to='ssm.simcard')),
                ('sold_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sold_inventory', to='ssm.user')),
            ],
            options={
                'db_table': 'shop_inventory',
            },
        ),
        migrations.CreateModel(
            name='ShopPerformance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='monthly', max_length=20)),
                ('total_sales', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('average_sale_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('opening_stock', models.IntegerField(default=0)),
                ('stock_received', models.IntegerField(default=0)),
                ('closing_stock', models.IntegerField(default=0)),
                ('stock_returned', models.IntegerField(default=0)),
                ('stock_damaged', models.IntegerField(default=0)),
                ('quality_sales', models.IntegerField(default=0)),
                ('non_quality_sales', models.IntegerField(default=0)),
                ('quality_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('unique_customers', models.IntegerField(default=0)),
                ('repeat_customers', models.IntegerField(default=0)),
                ('customer_satisfaction_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('working_days', models.IntegerField(default=0)),
                ('sales_per_day', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('target_sales', models.IntegerField(blank=True, null=True)),
                ('target_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('achievement_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('additional_metrics', models.JSONField(default=dict)),
                ('calculated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculated_performance', to='ssm.user')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_records', to='ssm.shop')),
            ],
            options={
                'db_table': 'shop_performance',
            },
        ),
        migrations.CreateModel(
            name='ShopSales',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sale_reference', models.CharField(max_length=50, unique=True)),
                ('sale_date', models.DateTimeField(auto_now_add=True)),
                ('customer_name', models.CharField(max_length=200)),
                ('customer_phone', models.CharField(max_length=20)),
                ('customer_id_number', models.CharField(max_length=50)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('mobile_money', 'Mobile Money'), ('bank_transfer', 'Bank Transfer'), ('credit', 'Credit')], default='cash', max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('change_given', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='completed', max_length=20)),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True)),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
                ('refund_reason', models.TextField(blank=True, null=True)),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('refunded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refunded_sales', to='ssm.user')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='ssm.shop')),
                ('sim_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_sales', to='ssm.simcard')),
                ('sold_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_sales', to='ssm.user')),
            ],
            options={
                'db_table': 'shop_sales',
            },
        ),
        migrations.CreateModel(
            name='ShopTarget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_type', models.CharField(choices=[('sales_volume', 'Sales Volume'), ('revenue', 'Revenue'), ('commission', 'Commission'), ('quality_rate', 'Quality Rate'), ('customer_acquisition', 'Customer Acquisition')], max_length=30)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('period_type', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='monthly', max_length=20)),
                ('target_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('current_value', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('achievement_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_achieved', models.BooleanField(default=False)),
                ('achievement_date', models.DateField(blank=True, null=True)),
                ('incentive_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('incentive_paid', models.BooleanField(default=False)),
                ('incentive_paid_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('set_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='set_targets', to='ssm.user')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='ssm.shop')),
            ],
            options={
                'db_table': 'shop_targets',
            },
        ),
        migrations.CreateModel(
            name='ShopTransfer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transfer_reference', models.CharField(max_length=50, unique=True)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('in_transit', 'In Transit'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('dispatch_date', models.DateTimeField(blank=True, null=True)),
                ('expected_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('received_date', models.DateTimeField(blank=True, null=True)),
                ('sim_cards', models.JSONField(default=list, help_text='List of SIM card serial numbers')),
                ('total_quantity', models.IntegerField(default=0)),
                ('received_quantity', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_shop_transfers', to='ssm.user')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_shop_transfers', to='ssm.user')),
                ('destination_shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_shop_transfers', to='ssm.shop')),
                ('dispatched_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispatched_transfers', to='ssm.user')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_transfers', to='ssm.user')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_shop_transfers', to='ssm.user')),
                ('source_shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_shop_transfers', to='ssm.shop')),
            ],
            options={
                'db_table': 'shop_transfers',
            },
        ),
        migrations.CreateModel(
            name='TeamMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance', models.JSONField(blank=True, default=dict, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='ssm.team')),
            ],
        ),
        migrations.AddIndex(
            model_name='shop',
            index=models.Index(fields=['shop_code'], name='shops_shop_co_db2cdc_idx'),
        ),
        migrations.AddIndex(
            model_name='shop',
            index=models.Index(fields=['status'], name='shops_status_a77d69_idx'),
        ),
        migrations.AddIndex(
            model_name='shop',
            index=models.Index(fields=['region', 'city'], name='shops_region_6daf78_idx'),
        ),
        migrations.AddIndex(
            model_name='shop',
            index=models.Index(fields=['team'], name='shops_team_id_063229_idx'),
        ),
        migrations.AddIndex(
            model_name='shopauditlog',
            index=models.Index(fields=['shop', 'created_at'], name='shop_audit__shop_id_cd0220_idx'),
        ),
        migrations.AddIndex(
            model_name='shopauditlog',
            index=models.Index(fields=['action_type'], name='shop_audit__action__40b922_idx'),
        ),
        migrations.AddIndex(
            model_name='shopauditlog',
            index=models.Index(fields=['user', 'created_at'], name='shop_audit__user_id_0b61bf_idx'),
        ),
        migrations.AddIndex(
            model_name='shopinventory',
            index=models.Index(fields=['shop', 'status'], name='shop_invent_shop_id_fdb6e7_idx'),
        ),
        migrations.AddIndex(
            model_name='shopinventory',
            index=models.Index(fields=['sold_date'], name='shop_invent_sold_da_f5abf6_idx'),
        ),
        migrations.AddIndex(
            model_name='shopinventory',
            index=models.Index(fields=['allocated_date'], name='shop_invent_allocat_497d9d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='shopinventory',
            unique_together={('shop', 'sim_card')},
        ),
        migrations.AddIndex(
            model_name='shopperformance',
            index=models.Index(fields=['shop', 'period_type'], name='shop_perfor_shop_id_029b11_idx'),
        ),
        migrations.AddIndex(
            model_name='shopperformance',
            index=models.Index(fields=['period_start', 'period_end'], name='shop_perfor_period__40540e_idx'),
        ),
        migrations.AddIndex(
            model_name='shopperformance',
            index=models.Index(fields=['total_revenue'], name='shop_perfor_total_r_c939cb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='shopperformance',
            unique_together={('shop', 'period_start', 'period_end', 'period_type')},
        ),
        migrations.AddIndex(
            model_name='shopsales',
            index=models.Index(fields=['sale_reference'], name='shop_sales_sale_re_ec54bf_idx'),
        ),
        migrations.AddIndex(
            model_name='shopsales',
            index=models.Index(fields=['shop', 'sale_date'], name='shop_sales_shop_id_7b675c_idx'),
        ),
        migrations.AddIndex(
            model_name='shopsales',
            index=models.Index(fields=['customer_phone'], name='shop_sales_custome_37a4bf_idx'),
        ),
        migrations.AddIndex(
            model_name='shopsales',
            index=models.Index(fields=['status'], name='shop_sales_status_9a056b_idx'),
        ),
        migrations.AddIndex(
            model_name='shoptarget',
            index=models.Index(fields=['shop', 'period_start', 'period_end'], name='shop_target_shop_id_69be7c_idx'),
        ),
        migrations.AddIndex(
            model_name='shoptarget',
            index=models.Index(fields=['target_type'], name='shop_target_target__93d067_idx'),
        ),
        migrations.AddIndex(
            model_name='shoptarget',
            index=models.Index(fields=['is_achieved'], name='shop_target_is_achi_cbb102_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='shoptarget',
            unique_together={('shop', 'target_type', 'period_start', 'period_end')},
        ),
        migrations.AddIndex(
            model_name='shoptransfer',
            index=models.Index(fields=['transfer_reference'], name='shop_transf_transfe_29f5d5_idx'),
        ),
        migrations.AddIndex(
            model_name='shoptransfer',
            index=models.Index(fields=['status'], name='shop_transf_status_c588e0_idx'),
        ),
        migrations.AddIndex(
            model_name='shoptransfer',
            index=models.Index(fields=['source_shop', 'destination_shop'], name='shop_transf_source__e7e183_idx'),
        ),
        migrations.AddIndex(
            model_name='shoptransfer',
            index=models.Index(fields=['request_date'], name='shop_transf_request_3f789e_idx'),
        ),
    ]
